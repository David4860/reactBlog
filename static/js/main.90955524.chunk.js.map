{"version":3,"sources":["shared/Header.js","context/blog-context.js","components/BlogForm.js","components/PageLoader.js","components/Home.js","components/Main.js","context/reducers.js","context/GlobalState.js","App.js","index.js"],"names":["Header","props","React","useState","show","setShow","Flex","as","align","justify","wrap","padding","bg","color","mr","Heading","size","letterSpacing","Box","display","base","md","onClick","fill","width","viewBox","xmlns","d","sm","alignItems","flexGrow","fontSize","to","activeClassName","ml","mt","Link","href","isExternal","style","textDecoration","Button","leftIcon","FaGithub","border","createContext","blogs","createBlog","blog","deleteBlog","blogId","BlogForm","match","editMode","title","authorName","content","initialValues","setInitialValues","params","id","context","useContext","BlogContext","toast","useToast","validateTitle","value","error","length","validateAuthorName","useEffect","selectedBlog","filter","Number","in","transformProps","exitTransform","maxWidth","mx","my","paddingTop","paddingBottom","height","justifyContent","flexDirection","p","shadow","borderWidth","rounded","Stack","isInline","spacing","enableReinitialize","onSubmit","values","actions","setTimeout","editBlog","resetForm","setSubmitting","position","description","status","duration","isClosable","handleChange","handleSubmit","isSubmitting","name","validate","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","Input","placeholder","onChange","FormErrorMessage","Textarea","variantColor","isLoading","type","float","PageLoader","left","right","bottom","top","zIndex","Spinner","thickness","Home","setBlogId","SimpleGrid","columns","map","key","margin","Badge","maxW","overflow","src","alt","loader","fontWeight","textTransform","px","clamp","lineHeight","Main","Fragment","exact","path","component","render","getBlogIndex","state","findIndex","blogReducer","action","state_blogs","push","GlobalState","blogs_data","useReducer","blogState","dispatch","Provider","children","App","breakpoints","lg","xl","newTheme","theme","ReactDOM","StrictMode","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.90955524.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Heading, Flex, Text, Button, Link } from \"@chakra-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { FaGithub } from \"react-icons/fa\";\nimport \"../App.css\";\n\nconst MenuItems = ({ children }) => (\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n    {children}\n  </Text>\n);\n\n// Note: This code could be better, so I'd recommend you to understand how I solved and you could write yours better :)\nconst Header = props => {\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.5rem\"\n      bg=\"teal.500\"\n      color=\"white\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"} color=\"gray.600\">\n          Blog\n        </Heading>\n      </Flex>\n\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <svg\n          fill=\"white\"\n          width=\"12px\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Menu</title>\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n        </svg>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ sm: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}\n      >\n        <Box>\n          <Heading fontSize=\"20px\">\n            <NavLink to=\"/new\" activeClassName=\"active\">\n              New\n            </NavLink>\n          </Heading>\n        </Box>\n        <Box ml={3}>\n          <Heading fontSize=\"20px\">\n            <NavLink to=\"/blogs\" activeClassName=\"active\">\n              List\n            </NavLink>\n          </Heading>\n        </Box>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        <Link\n          href=\"https://github.com/MA-Ahmad/reactBlog\"\n          isExternal\n          style={{ textDecoration: \"none\" }}\n        >\n          <Button leftIcon={FaGithub} bg=\"transparent\" border=\"1px\">\n            View Source\n          </Button>\n        </Link>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport blogs from \"../data/blogs\";\n\nexport default React.createContext({\n  blogs: blogs,\n  createBlog: blog => {},\n  deleteBlog: blogId => {}\n});\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  Box,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Textarea,\n  Button,\n  Heading,\n  useToast,\n  FormErrorMessage\n} from \"@chakra-ui/core\";\nimport BlogContext from \"../context/blog-context\";\nimport { Formik, Field } from \"formik\";\nimport { FadeTransform } from \"react-animation-components\";\n\nconst BlogForm = ({ match, editMode }) => {\n  const [initialValues, setInitialValues] = useState({\n    title: \"\",\n    authorName: \"\",\n    content: \"\"\n  });\n  const [id, setId] = useState(match.params.id);\n  const context = useContext(BlogContext);\n  const toast = useToast();\n\n  useEffect(() => {\n    if (editMode) {\n      const selectedBlog = context.blogs.filter(\n        blog => blog.id === Number(id)\n      )[0];\n      setInitialValues(selectedBlog);\n    } else {\n      setInitialValues({\n        title: \"\",\n        authorName: \"\",\n        content: \"\"\n      });\n    }\n  }, [editMode]);\n\n  function validateTitle(value) {\n    let error;\n    if (!value) {\n      error = \"Title is required\";\n    } else if (value.length < 5) {\n      error = \"Must be 5 characters or more\";\n    }\n    return error;\n  }\n\n  function validateAuthorName(value) {\n    let error;\n    if (!value) {\n      error = \"Name is required\";\n    } else if (value.length < 5) {\n      error = \"Must be 5 characters or more\";\n    }\n    return error;\n  }\n\n  return (\n    <FadeTransform\n      in\n      transformProps={{\n        exitTransform: \"scale(0.5) translateX(-50%)\"\n      }}\n    >\n      <Box\n        maxWidth=\"1200px\"\n        mx=\"auto\"\n        my=\"auto\"\n        paddingTop=\"20px\"\n        paddingBottom=\"20px\"\n        height={\"100%\"}\n      >\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\"\n        >\n          <Heading as=\"h1\" color=\"teal.500\" size=\"lg\" p={5}>\n            {editMode ? \"Update\" : \"Create\"} a Blog\n          </Heading>\n\n          <Box p={5} shadow=\"md\" borderWidth=\"1px\" rounded=\"md\" width={\"40%\"}>\n            <Stack isInline spacing={8} align=\"center\">\n              <Formik\n                enableReinitialize\n                initialValues={initialValues}\n                onSubmit={(values, actions) => {\n                  setTimeout(() => {\n                    if (editMode) {\n                      values[\"id\"] = Number(id);\n                      setInitialValues(values);\n                      context.editBlog(values);\n                    } else {\n                      context.createBlog(values);\n                      actions.resetForm({});\n                    }\n                    actions.setSubmitting(false);\n                    const text = editMode\n                      ? \"Blog post updated successfully\"\n                      : \"You've successfully created a blog post.\";\n                    toast({\n                      position: \"bottom\",\n                      title: \"Blog\",\n                      description: text,\n                      status: \"success\",\n                      duration: 5000,\n                      isClosable: true\n                    });\n                  }, 1000);\n                }}\n              >\n                {({ values, handleChange, handleSubmit, isSubmitting }) => {\n                  return (\n                    <form onSubmit={handleSubmit} style={{ width: \"100%\" }}>\n                      <Box paddingBottom={3}>\n                        <Field\n                          name=\"title\"\n                          validate={validateTitle}\n                          width={\"100%\"}\n                        >\n                          {({ field, form }) => (\n                            <FormControl\n                              isInvalid={\n                                form.errors.title && form.touched.title\n                              }\n                            >\n                              <FormLabel htmlFor=\"title\">Title</FormLabel>\n                              <Input\n                                {...field}\n                                id=\"title\"\n                                placeholder=\"Title\"\n                                value={values.title}\n                                onChange={handleChange}\n                              />\n                              <FormErrorMessage>\n                                {form.errors.title}\n                              </FormErrorMessage>\n                            </FormControl>\n                          )}\n                        </Field>\n                      </Box>\n                      <Box paddingBottom={3}>\n                        <Field\n                          name=\"authorName\"\n                          validate={validateAuthorName}\n                          width={\"100%\"}\n                        >\n                          {({ field, form }) => (\n                            <FormControl\n                              isInvalid={\n                                form.errors.authorName &&\n                                form.touched.authorName\n                              }\n                            >\n                              <FormLabel htmlFor=\"authorName\">Name</FormLabel>\n                              <Input\n                                {...field}\n                                id=\"authorName\"\n                                placeholder=\"Author Name\"\n                                value={values.authorName}\n                                onChange={handleChange}\n                              />\n                              <FormErrorMessage>\n                                {form.errors.authorName}\n                              </FormErrorMessage>\n                            </FormControl>\n                          )}\n                        </Field>\n                      </Box>\n                      <Box paddingBottom={5}>\n                        <FormLabel htmlFor=\"content\">Content</FormLabel>\n                        <Textarea\n                          height={\"20vh\"}\n                          name=\"content\"\n                          value={values.content}\n                          onChange={handleChange}\n                        />\n                      </Box>\n                      <Button\n                        mt={4}\n                        variantColor=\"teal\"\n                        isLoading={isSubmitting}\n                        type=\"submit\"\n                        float=\"right\"\n                      >\n                        {editMode ? \"Update\" : \"Create\"}\n                      </Button>\n                    </form>\n                  );\n                }}\n              </Formik>\n            </Stack>\n          </Box>\n        </Flex>\n      </Box>\n    </FadeTransform>\n  );\n};\n\nexport default BlogForm;\n","import React from \"react\";\nimport { Flex, Spinner } from \"@chakra-ui/core\";\nconst PageLoader = () => {\n  return (\n    <Flex\n      position=\"fixed\"\n      left={0}\n      right={0}\n      bottom={0}\n      top={0}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg=\"white\"\n      zIndex={999}\n    >\n      <Spinner thickness=\"4px\" color=\"gray.400\" />\n    </Flex>\n  );\n};\n\nexport default PageLoader;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Badge, SimpleGrid } from \"@chakra-ui/core\";\nimport Dotdotdot from \"react-dotdotdot\";\nimport BlogContext from \"../context/blog-context\";\nimport { Link } from \"react-router-dom\";\nimport PageLoader from \"./PageLoader\";\nimport { Img } from \"react-image\";\n\nconst Home = () => {\n  const context = useContext(BlogContext);\n  const [blogId, setBlogId] = useState(\"\");\n\n  useEffect(() => {\n    context.deleteBlog(blogId);\n  }, [blogId]);\n\n  return (\n    <Box\n      maxWidth=\"1200px\"\n      mx=\"auto\"\n      my=\"auto\"\n      paddingTop=\"20px\"\n      paddingBottom=\"20px\"\n    >\n      <SimpleGrid columns={3} spacing=\"15px\">\n        {context.blogs.map(blog => {\n          return (\n            <Box position=\"relative\" key={blog.id}>\n              <Box\n                as=\"span\"\n                fontSize=\"sm\"\n                position=\"absolute\"\n                right=\"5px\"\n                margin=\"5px\"\n                zIndex=\"1\"\n              >\n                <Badge\n                  rounded=\"full\"\n                  p=\"2px 8px\"\n                  variantColor=\"red\"\n                  as=\"button\"\n                  onClick={() => setBlogId(blog.id)}\n                >\n                  Delete\n                </Badge>\n              </Box>\n              <Link to={`/edit/${blog.id}`}>\n                <Box\n                  maxW=\"sm\"\n                  borderWidth=\"1px\"\n                  shadow=\"md\"\n                  rounded=\"lg\"\n                  overflow=\"hidden\"\n                  position=\"relative\"\n                >\n                  <Img\n                    src={\"https://bit.ly/2Z4KKcF\"}\n                    alt=\"Blog image\"\n                    loader={<PageLoader />}\n                  />\n                  <Box p=\"6\">\n                    <Box d=\"flex\" alignItems=\"baseline\">\n                      <Box\n                        fontWeight=\"semibold\"\n                        as=\"h2\"\n                        letterSpacing=\"wide\"\n                        textTransform=\"uppercase\"\n                        ml=\"2\"\n                      >\n                        {blog.title}\n                      </Box>\n                    </Box>\n                    <Box>\n                      <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n                        <Badge rounded=\"full\" px=\"2\" variantColor=\"teal\">\n                          {blog.authorName}\n                        </Badge>\n                      </Box>\n                    </Box>\n                    <Dotdotdot clamp={3}>\n                      <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"p\"\n                        lineHeight=\"tight\"\n                        color=\"gray.600\"\n                        fontSize=\"sm\"\n                      >\n                        {blog.content}\n                      </Box>\n                    </Dotdotdot>\n                  </Box>\n                </Box>\n              </Link>\n            </Box>\n          );\n        })}\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"../shared/Header\";\nimport BlogForm from \"./BlogForm\";\nimport Home from \"./Home\";\n\nconst Main = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <Switch>\n        <Route exact path=\"/blogs\" component={Home} />\n        <Route\n          exact\n          path=\"/new\"\n          render={props => {\n            return <BlogForm {...props} editMode={false} />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/edit/:id\"\n          render={props => {\n            return <BlogForm {...props} editMode={true} />;\n          }}\n        />\n        <Redirect to=\"/blogs\" />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default Main;\n","export const CREATE_BLOG = \"CREATE_BLOG\";\nexport const EDIT_BLOG = \"EDIT_BLOG\";\nexport const DELETE_BLOG = \"DELETE_BLOG\";\n\nconst createBlog = (blog, state) => {\n  const state_blogs = [...state.blogs];\n  state_blogs.push({ ...blog, id: state_blogs.length + 1 });\n  return { ...state, blogs: state_blogs };\n};\n\nconst editBlog = (blog, state) => {\n  const state_blogs = [...state.blogs];\n  const blogIndex = getBlogIndex(state, blog.id);\n  state_blogs[blogIndex] = blog;\n  return { ...state, blogs: state_blogs };\n};\n\nconst getBlogIndex = (state, blogId) => {\n  return state.blogs.findIndex(blog => blog.id === blogId);\n};\n\nconst deleteBlog = (blogId, state) => {\n  const state_blogs = [...state.blogs];\n  return { ...state, blogs: state_blogs.filter(blog => blog.id !== blogId) };\n};\n\nexport const blogReducer = (state, action) => {\n  switch (action.type) {\n    case CREATE_BLOG:\n      return createBlog(action.blog, state);\n    case EDIT_BLOG:\n      return editBlog(action.blog, state);\n    case DELETE_BLOG:\n      return deleteBlog(action.blogId, state);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport BlogContext from \"./blog-context\";\nimport { blogReducer, CREATE_BLOG, EDIT_BLOG, DELETE_BLOG } from \"./reducers\";\nimport blogs_data from \"../data/blogs\";\n\nconst GlobalState = props => {\n  const blogs = blogs_data;\n  const [blogState, dispatch] = useReducer(blogReducer, { blogs: blogs });\n\n  const createBlog = blog => {\n    dispatch({ type: CREATE_BLOG, blog: blog });\n  };\n\n  const editBlog = blog => {\n    dispatch({ type: EDIT_BLOG, blog: blog });\n  };\n\n  const deleteBlog = blogId => {\n    dispatch({ type: DELETE_BLOG, blogId: blogId });\n  };\n\n  return (\n    <BlogContext.Provider\n      value={{\n        blogs: blogState.blogs,\n        createBlog: createBlog,\n        editBlog: editBlog,\n        deleteBlog: deleteBlog\n      }}\n    >\n      {props.children}\n    </BlogContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport GlobalState from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <Router>\n        <Main />\n      </Router>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { theme, ThemeProvider, CSSReset } from \"@chakra-ui/core\";\n\nconst breakpoints = [\"360px\", \"768px\", \"1024px\", \"1440px\"];\nbreakpoints.sm = breakpoints[0];\nbreakpoints.md = breakpoints[1];\nbreakpoints.lg = breakpoints[2];\nbreakpoints.xl = breakpoints[3];\n\nconst newTheme = {\n  ...theme,\n  breakpoints\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={newTheme}>\n      <CSSReset />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// function App() {\n//   return (\n//     <ThemeProvider theme={newTheme}>\n//       <CSSReset />\n//       <Header />\n//       <App />\n//     </ThemeProvider>\n//   );\n// }\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}